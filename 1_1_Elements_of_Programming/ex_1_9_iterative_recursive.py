"""
Exercise 1.9. 

Each of the following two procedures defines a method for adding two 
positive integers in terms of the procedures inc, which increments its 
argument by 1, and dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0)
      b
      (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
      b
      (+ (dec a) (inc b))))

Using the substitution model, illustrate the process generated by each 
procedure in evaluating (+ 4 5). Are these processes iterative or 
recursive?
"""


def inc(x):
    return x + 1


def dec(x):
    return x - 1


def add_v1(a, b):
    if a == 0:
        return b
    else:
        return inc(add_v1(dec(a), b))


# >>> add_v1(4, 5)
# return inc(add_v1(dec(4),5))
# return inc(add_v1(3,5))
# return inc(inc(add_v1(2,5)))
# return inc(inc(inc(add_v1(1,5))))
# return inc(inc(inc(inc(add_v1(0,5))))) # return b = 5, plus 4 incs
# 9
# Check out that wicked gnarly linear recursive expansion!


def add_v2(a, b):
    if a == 0:
        return b
    else:
        return add_v2(dec(a), inc(b))


# >>> add_v2(4, 5)
# return add_v2(dec(4), inc(5))
# return add_v2(3, 6)
# return add_v2(dec(3), inc(6))
# return add_v2(2, 7)
# return add_v2(dec(2), inc(7))
# return add_v2(1, 8)
# return add_v2(dec(1), inc(8))
# return add_v2(0, 9)
# 9
# Check out that sweet iterative constant space complexity!
